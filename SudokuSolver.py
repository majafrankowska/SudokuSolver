def is_valid(board, row, col, num):
    num = str(num)
    for i in range(16):
        if board[row][i] == num or board[i][col] == num:
            return False

    start_row, start_col = 4 * (row // 4), 4 * (col // 4)
    for i in range(4):
        for j in range(4):
            if board[start_row + i][start_col + j] == num:
                return False
    return True

def solve_sudoku(board):
    for row in range(16):
        for col in range(16):
            if board[row][col] == "_":
                for num in "0123456789ABCDEF":
                    if is_valid(board, row, col, num):
                        board[row][col] = num
                        if solve_sudoku(board):
                            return True
                        board[row][col] = "_"
                return False
    return True

def print_board(board):
    for row in board:
        print(" ".join(row))

# Initial board setup
board = [
    ["D", "4", "_", "_", "3", "A", "5", "_", "F", "_", "G", "_", "_", "_", "_", "_"],
    ["9", "2", "_", "B", "_", "_", "8", "_", "_", "1", "3", "_", "_", "D", "_", "_"],
    ["5", "_", "8", "_", "_", "9", "_", "_", "_", "_", "D", "F", "B", "_", "_", "8"],
    ["6", "_", "_", "_", "_", "_", "D", "_", "_", "_", "4", "G", "_", "_", "_", "_"],
    ["_", "D", "_", "3", "6", "4", "C", "_", "2", "8", "5", "1", "_", "F", "7", "A"],
    ["_", "_", "_", "F", "_", "A", "_", "B", "_", "_", "_", "_", "8", "9", "C", "_"],
    ["1", "2", "6", "_", "8", "9", "F", "_", "A", "G", "C", "_", "5", "B", "_", "D"],
    ["_", "_", "7", "C", "9", "5", "E", "6", "_", "3", "_", "2", "_", "_", "_", "_"],
    ["_", "_", "_", "_", "2", "5", "9", "F", "_", "_", "4", "_", "3", "6", "_", "_"],
    ["_", "_", "_", "_", "_", "_", "A", "G", "C", "5", "B", "_", "_", "_", "_", "D"],
    ["7", "C", "9", "5", "E", "6", "3", "_", "C", "2", "A", "_", "_", "_", "_", "_"],
    ["2", "C", "D", "1", "_", "_", "_", "_", "G", "_", "_", "8", "4", "_", "_", "_"],
    ["A", "B", "5", "1", "_", "_", "2", "G", "_", "4", "9", "6", "_", "3", "C", "7"],
    ["_", "_", "_", "8", "_", "7", "_", "A", "1", "_", "_", "_", "B", "5", "_", "_"],
    ["8", "2", "B", "_", "E", "C", "D", "_", "7", "_", "_", "G", "_", "_", "_", "3"],
    ["_", "_", "7", "4", "_", "5", "_", "_", "A", "_", "_", "_", "E", "F", "_", "2"],
    ["_", "_", "3", "4", "_", "_", "A", "_", "_", "G", "2", "_", "F", "_", "_", "_"],
    ["A", "_", "_", "1", "_", "_", "3", "D", "E", "_", "_", "_", "_", "1", "B", "_"]
]

if solve_sudoku(board):
    print_board(board)
else:
    print("No solution found")
